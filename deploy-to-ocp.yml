---
- hosts: all

  tasks:
    - ansible.builtin.debug:
        msg: "{{ awx_webhook_payload.ref.split('/')[2] }}"

    - ansible.builtin.set_fact:
        env: "{{ awx_webhook_payload.ref.split('/')[2] }}"

    - ansible.builtin.include_vars:
        file: ./vars/git_credentials.yaml

    - ansible.builtin.include_vars:
        file: ./vars/{{ env }}.yaml

    - name: Clone the infrastructure code repository
      ansible.builtin.git:
        repo: "{{ git_repo }}"
        dest: "{{ ansible_env.HOME }}/git-fevermap"
        single_branch: yes
        version: "{{ env }}"

    - name: Copy namespace yaml creation
      ansible.builtin.template:
        src: namespace.yaml.j2
        dest: "{{ ansible_env.HOME }}/git-fevermap/namespace.yaml"

    - name: Get Openshift projects
      kubernetes.core.k8s_info:
        kind: Project
        api_version: "project.openshift.io/v1"
        name: "{{ namespace }}"
      register: project_status

    - name: Create Openshift project
      kubernetes.core.k8s:
        state: "{{ state }}"
        src: "{{ ansible_env.HOME }}/git-fevermap/namespace.yaml"
      when: project_status.resources == []

    - name: Create template on Openshift project
      kubernetes.core.k8s:
        state: "{{ state }}"
        src: "{{ ansible_env.HOME }}/git-fevermap/template-fevermap.yaml"
        namespace: "{{ namespace }}"

    - name: Process a template in the cluster
      community.okd.openshift_process:
        name: "{{ template_name }}"
        namespace: "{{ namespace }}"
        parameters: "{{ template_parameters }}"
        state: rendered
      register: result

    - name: Create the rendered resources using apply
      community.okd.k8s:
        namespace: "{{ namespace }}"
        definition: '{{ item }}'
        wait: yes
        apply: yes
      loop: '{{ result.resources }}'